% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/exact.R
\name{rosalia}
\alias{rosalia}
\title{Fit a Markov network to binary data}
\usage{
rosalia(x, prior = make_logistic_prior(location = 0, scale = 1),
  maxit = 100, trace = 1, hessian = FALSE, parlist, ...)
}
\arguments{
\item{x}{A binary matrix.  Each row corresponds to an observed sample and each
column corresponds to one node in the observed network.}

\item{prior}{An object of class \code{prior}. The default prior, produced by
\code{\link{make_logistic_prior}}, regularizes the parameter estimates. This is
important in Markov networks because the number of parameters will often be large
compared to the number of independent observations. The flat prior produced by 
\code{\link{make_logistic_prior}} is unbiased, but can result in unbounded estimates
if two nodes always share the same state in the data set.}

\item{maxit, trace, hessian, ...}{Arguments passed to \code{\link{optim}}}

\item{parlist}{user-specified starting values (optional).}
}
\value{
a \code{list} with the following elements:
\item{alpha}{A vector of estimated univariate potentials ("intercepts"). Larger values
support higher probabilities for the corresponding node.}
\item{beta}{A symmetric matrix of bivariate potentials ("interaction strengths"). Larger values
support higher probabilities for the corresponding pair of nodes.}
\item{prior}{The prior object that was used during model fitting.}
\item{opt}{The list returned by \code{\link[stats]{optim}}.}
}
\description{
The optimization is performed using the \code{BFGS} method in the \code{\link[stats]{optim}}
function. Note that the likelihood function includes \code{2^N} terms for \code{N} nodes,
so parameter estimation can be very slow with more than about 20-25 nodes.
}
\examples{
# Simulate a random binary matrix with 1000 observations of five binary variables
m = matrix(rbinom(5000, size = 1, prob = .5), nrow = 1000, ncol = 5)

fit = rosalia(m)

fit$alpha
fit$beta

}

